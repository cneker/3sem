#include <iostream>
#include "Workshop.h"

using namespace std;

Workshop cpy(Workshop& data) //Конструктор копирования при построении временного объекта как возвращаемого значения функции
{
	Workshop temp(data);
	return temp; //Вызов деструктора для объекта temp
}

int main()
{
	setlocale(LC_ALL, "rus");
	//Статистический массив объектов, конструктор без параметров
	Workshop w1[3];
	w1[0].show();
	//Конструктор с параметрами и копирования
	Workshop w2("Some", "thing", 5), w3=w2;
	w2.show();
	w3.show();
	//Конструктор копирования (передача объекта по значению)
	Workshop w4(w3);
	w4.show();
	//Динамический массив объектов
	Workshop* e5 = new Workshop[3];
	for (int i = 0; i < 3; i++) {
		e5[i].set_name("May");
		e5[i].set_chief("Be");
		e5[i].set_count(123);
	}
	for (int i = 0; i < 3; i++)
		e5[i].show();

	Workshop* ptr; //Указатель на объект
	ptr = &e5[0]; //Присваивание указателю адреса другого объекта
	ptr->show(); //Вывод значений полей объекта
	//Конструктор копирования при построении временного объекта как возвращаемого значения функции
	Workshop e6 = cpy(e5[1]);
	e6.show();

	void(Workshop:: * pf)(); //Указатель на компонентную функцию
	pf = &Workshop::show; //Присваивание адреса
	(e5[2].*pf)(); //Вывод значений полей объекта

	delete[] e5; //Вызов деструктора для массива объектов w5
	return 0; //Вызов деструктора для объектов w6, w4, w3, w2, массива объектов w1
}